input {
	file {
		path => 'D:/elasticsearch/logstash/data/apache_*.log'
		start_position => 'beginning'
	}
	
	http { # receive request from http
		host => '127.0.0.1'
		port => 8989
	}
}

filter {
	if [headers][request_path] =~ "error" or [path] =~ "error" { // path field will be add by file input plugin
		mutate {
			replace => { "type" => "error" }
		}
	}else{
		mutate {
			replace => { "type" => "access" }
		}
		grok { # parse message
			match => { "message" => '%{COMMONAPACHELOG} "%{GREEDYDATA:referrer}" "%{GREEDYDATA:agent}"' }
		}
		
		if "_grokparsefailure" in [tags] {
			drop { }
		}
		
		mutate {
			convert => { # convert type
				"bytes" => "integer"
				"response" => "integer"
			}
		}
		
		date { # set time of the event
			match => ["timestamp" , "dd/MMM/yyyy:HH:mm:ss Z"] #format of field want to parse
			remove_field => ["timestamp"] #remove timestamp field
		}
	}
	
}

output{
	stdout{
		codec => rubydebug
	}
	
	file {
		path => '%{type}_%{+yyyy-MM-dd}.log'
	}
}
